#pragma checksum "C:\Users\Code\Desktop\CODE_ACADEMY\Back-Home\Final_Full_Project_Limak.az\Limak.az\ProjectFinal\Views\Calculator\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3d6e3e4b498c742931f6e5beab73cf6903b5b478"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Calculator_Index), @"mvc.1.0.view", @"/Views/Calculator/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Code\Desktop\CODE_ACADEMY\Back-Home\Final_Full_Project_Limak.az\Limak.az\ProjectFinal\Views\_ViewImports.cshtml"
using ProjectFinal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Code\Desktop\CODE_ACADEMY\Back-Home\Final_Full_Project_Limak.az\Limak.az\ProjectFinal\Views\_ViewImports.cshtml"
using ProjectFinal.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Code\Desktop\CODE_ACADEMY\Back-Home\Final_Full_Project_Limak.az\Limak.az\ProjectFinal\Views\_ViewImports.cshtml"
using ProjectFinal.Models.HomeViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3d6e3e4b498c742931f6e5beab73cf6903b5b478", @"/Views/Calculator/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c833bceb15ef584cd712485037d7a2b0500c0e8c", @"/Views/_ViewImports.cshtml")]
    public class Views_Calculator_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Project/css/calculator.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Project/js/calculator.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/PanelPage/js/CurrencyRequest.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Code\Desktop\CODE_ACADEMY\Back-Home\Final_Full_Project_Limak.az\Limak.az\ProjectFinal\Views\Calculator\Index.cshtml"
   ViewData["Title"] = "Index"; 

#line default
#line hidden
#nullable disable
            DefineSection("calculatorCSS", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "3d6e3e4b498c742931f6e5beab73cf6903b5b4786251", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral(@"
<section style=""background-color:#f0f0f7"" id=""calculator"">
    <div class=""container"">
        <div class=""calculatorContent"">
            <div class=""row colExs"">
                <div class=""col-md-4 col-sm-5 col-xs-6 "">
                    <div class=""calculatorContentLeft"">
                        <h4>Kalkulyator </h4>

                    </div>

                </div>
                <div class=""col-md-8 col-sm-7 col-xs-6"">
                    <div class=""calculatorContentRight"">
                        <ul>
                            <li>
                                <a href=""/home/index"">
                                    <span class=""calcVisible"">Ana səhifə</span>
                                    <span class=""calcNotVisible"">...</span>

                                </a>
                            </li>
                            <li class=""customSlash""> / </li>
                            <li class=""calclist""> KALKULYATOR </li>

                        </ul>

");
            WriteLiteral(@"                    </div>
                </div>

            </div>

        </div>

    </div>

</section>
<section id=""calculatorMain"">
    <div class=""container"">
        <div class=""calculatorMainContent"">
            <div class=""row"">
                <div class=""col-lg-5 col-md-12 col-sm-12 col-xs-12"">
                    <div class=""calculatorMainLeft"">
                        <div class=""calculatorMainLeftTop"">
                            <div class=""block"">
                                <div class=""blockTop"">
                                    <div class=""row"">
                                        <div class=""col-6"">
                                            <div class=""blockTopLeft"">
                                                <h4>Kalkulyator</h4>
                                            </div>

                                        </div>
                                        <div class=""col-6 customRight"">
                                            <");
            WriteLiteral(@"span class=""customCalcReset""> Kalkulyatoru sıfırla </span>


                                        </div>

                                    </div>
                                </div>
                                <div class=""blockMain"">
                                    <div class=""row"">
                                        <div class=""col-6"">
                                            <div class=""blockMainLeft"">
                                                <div class=""formContent"">


                                                    <div class=""btn-group dropup"">
                                                        <button type=""button""
                                                                class=""btn btn-secondary countryButton dropdown-toggle customButton""
                                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                                aria-expanded=""false"">
       ");
            WriteLiteral(@"                                                     Türkiyə
                                                        </button>


                                                        <div class=""dropdown-menu"">
                                                            <ul>
                                                                <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                    Türkiyə
                                                                </li>
                                                                <li class=""clickedDropdown""> Amerike </li>

                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""formContent width100 formContentMargin"">
             ");
            WriteLiteral(@"                                       <div class=""btn-group width100 "">
                                                        <input class=""form-control CustomCekiInput customDefaultInput"" type=""text""
                                                               placeholder=""Çəki"">

                                                        <button type=""button""
                                                                class=""btn btn-sm smallSecondButton kqcustomMain btn-secondary dropdown-toggle dropdown-toggle-split""
                                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                                aria-expanded=""false"">
                                                            <span class=""kqcustomMain"">kq </span>
                                                            <span class=""sr-only"">Toggle Dropdown</span>
                                                        </button>
                 ");
            WriteLiteral(@"                                       <div class=""dropdown-menu smallDropdownMenu"">
                                                            <ul>
                                                                <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                    kq
                                                                </li>
                                                                <li class=""clickedDropdown""> qram </li>

                                                            </ul>

                                                        </div>
                                                    </div>

                                                </div>
                                                <div class=""formContent width100 formContentMargin"">
                                                    <div class=""btn-group width100 "">
                                                        <input");
            WriteLiteral(@" class=""form-control customEnInput customDefaultInput"" type=""text""
                                                               placeholder=""En"">

                                                        <button type=""button""
                                                                class=""btn btn-sm smallSecondButton btn-secondary dropdown-toggle dropdown-toggle-split""
                                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                                aria-expanded=""false"">
                                                            <span class=""smcustom"">sm </span>
                                                            <span class=""sr-only"">Toggle Dropdown</span>
                                                        </button>
                                                        <div class=""dropdown-menu smallDropdownMenu"">
                                                            <ul>
     ");
            WriteLiteral(@"                                                           <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                    sm
                                                                </li>
                                                                <li class=""clickedDropdown""> m </li>
                                                                <li class=""dropdownFirst clickedDropdown "">
                                                                    dm
                                                                </li>

                                                            </ul>

                                                        </div>
                                                    </div>

                                                </div>
                                                <div class=""formContent width100 formContentMargin"">
                                                    <div ");
            WriteLiteral(@"class=""btn-group width100 "">
                                                        <input class=""form-control customHundurlukInput customDefaultInput"" type=""text""
                                                               placeholder=""Hündürlük"">

                                                        <button type=""button""
                                                                class=""btn btn-sm smallSecondButton btn-secondary dropdown-toggle dropdown-toggle-split""
                                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                                aria-expanded=""false"">
                                                            <span class=""kqcustom"">sm </span>
                                                            <span class=""sr-only"">Toggle Dropdown</span>
                                                        </button>
                                                        <div class=""");
            WriteLiteral(@"dropdown-menu smallDropdownMenu"">
                                                            <ul>
                                                                <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                    sm
                                                                </li>
                                                                <li class=""clickedDropdown""> m </li>
                                                                <li class=""dropdownFirst clickedDropdown "">
                                                                    dm
                                                                </li>

                                                            </ul>

                                                        </div>
                                                    </div>

                                                </div>
                                                <div ");
            WriteLiteral(@"class=""formContent width100 "">
                                                    <button type=""button""
                                                            class=""btn btn-secondary hesablaButton  customButton""
                                                            aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                        Hesabla
                                                    </button>
                                                </div>


                                            </div>
                                        </div>
                                        <div class=""col-6"">
                                            <div class=""formContent"">
                                                <div class=""blockMainRight"">
                                                    <div class=""btn-group dropup"">
                                                      ");
            WriteLiteral(@"  <button type=""button""
                                                                class=""btn btn-secondary dropdown-toggle customButton""
                                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                                aria-expanded=""false"">
                                                            Bakı
                                                        </button>
                                                        <div class=""dropdown-menu"">
                                                            <ul>
                                                                <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                    Bakı
                                                                </li>
                                                                <li class=""clickedDropdown dropdownFirst"">
                         ");
            WriteLiteral(@"                                           Gəncə
                                                                </li>
                                                                <li class=""clickedDropdown dropdownFirst"">
                                                                    Sumqayıt
                                                                </li>
                                                                <li class=""clickedDropdown""> Zaqatala </li>



                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""formContent"">
                                                <input class=""form-control customAmount customDefaultInput"" type=""text""
                                        ");
            WriteLiteral(@"               placeholder=""Bağlama sayı"">

                                            </div>
                                            <div class=""formContent width100 formContentMargin"">
                                                <div class=""btn-group width100 "">
                                                    <input class=""form-control customUzunlugInput customDefaultInput"" type=""text""
                                                           placeholder=""Uzunlug"">

                                                    <button type=""button""
                                                            class=""btn btn-sm smallSecondButton btn-secondary dropdown-toggle dropdown-toggle-split""
                                                            data-toggle=""dropdown"" aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                        <span class=""kqcustom"">sm </span>
                        ");
            WriteLiteral(@"                                <span class=""sr-only"">Toggle Dropdown</span>
                                                    </button>
                                                    <div class=""dropdown-menu smallDropdownMenu"">
                                                        <ul>
                                                            <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                sm
                                                            </li>
                                                            <li class=""clickedDropdown""> m </li>
                                                            <li class=""dropdownFirst clickedDropdown "">
                                                                dm
                                                            </li>

                                                        </ul>

                                                    </div>
      ");
            WriteLiteral(@"                                          </div>

                                            </div>
                                            <div style=""visibility: hidden;""
                                                 class=""formContent width100 formContentMargin"">
                                                <div class=""btn-group width100 "">
                                                    <input class=""form-control customDefaultInput"" type=""text""
                                                           placeholder=""Uzunlug"">

                                                    <button type=""button""
                                                            class=""btn btn-sm smallSecondButton btn-secondary dropdown-toggle dropdown-toggle-split""
                                                            data-toggle=""dropdown"" aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                  ");
            WriteLiteral(@"      <span class=""kqcustom"">sm </span>
                                                        <span class=""sr-only"">Toggle Dropdown</span>
                                                    </button>
                                                    <div class=""dropdown-menu smallDropdownMenu"">
                                                        <ul>
                                                            <li class=""dropdownFirst clickedDropdown redSelected"">
                                                                sm
                                                            </li>
                                                            <li class=""clickedDropdown""> m </li>
                                                            <li class=""dropdownFirst clickedDropdown "">
                                                                dm
                                                            </li>

                                                        </ul>

 ");
            WriteLiteral(@"                                                   </div>
                                                </div>

                                            </div>
                                            <div class=""formContent width100 "">
                                                <div class=""dataShower"">
                                                    <div class=""dataShowerLeft"">
                                                        <span>Cəmi:</span>
                                                    </div>
                                                    <div class=""dataShowerRight"">
                                                        <span>$</span>
                                                        <span class=""finalAmount"">
                                                            0,00

                                                        </span>
                                                    </div>
                                                </");
            WriteLiteral(@"div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>
                        <div class=""calculatorMainLeftBottom"">
                            <div class=""currency"">
                                <div class=""calculator-input"">
                                    <div class=""row"">
                                        <div class=""col-6"">
                                            <input class=""form-control"" type=""number"" placeholder=""0.0"" min=""0.00"">

                                        </div>
                                        <div class=""col-6"">
                                            <select class=""form-control"" name=""Input"" id=""Input"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47827754", async() => {
                WriteLiteral("AZN");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47828959", async() => {
                WriteLiteral("USD");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47830164", async() => {
                WriteLiteral("TRY");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>

                                    </div>

                                </div>
                                <div class=""calculator-output"">
                                    <div class=""row"">
                                        <div class=""col-6"">
                                            <input class=""form-control"" type=""number"" placeholder=""0.0"" disabled>

                                        </div>
                                        <div class=""col-6"">
                                            <select class=""form-control"" name=""Output"" id=""Output"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47832087", async() => {
                WriteLiteral("AZN");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47833292", async() => {
                WriteLiteral("USD");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47834497", async() => {
                WriteLiteral("TRY");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>

                                    </div>


                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class=""col-lg-7 col-md-12 col-sm-12 col-xs-12"">
                    <div class=""calculatorMainRight"">
                        <div class=""howCalculate"">
                            <h3>
                                Necə hesablayım ?
                            </h3>
                            <p>
                                Seçdiyiniz məhsulların toplam məbləğini ""Konvertor"" yazılan hissəyə qeyd edin.
                                Kalkulatorda ödəyəcəyiniz toplam məbləğ manat ilə göstəriləcək
                            </p>
                            <h5>
                                Qeyd:
                            </h5>
                           ");
            WriteLiteral(@" <p>
                                Hesablayacağınız məbləğlərdə satıcı firmaların tələb etdiyi Türkiyə daxili karqo
                                pulunu nəzərə almağı unutmayın
                            </p>
                            <h5> Məlumat</h5>
                            <p>
                                Şirkətimiz Türkiyə və Amerikadan yüklərin daşınması ilə məşğul olur. Sizin
                                sifarişləriniz həftədə 2 dəfə Türkiyədən, 1 dəfə isə Amerikadan Bakıya çatdırılır.
                            </p>
                            <p>
                                Sifariş olunan bağlamanın çatdırılma haqqı çəkiyə görə hesablanır. Ölçüsü 1 metrdən
                                böyük olan bağlamaların kargo pulu isə həcmi çəkiyə görə müəyyən edilir.
                            </p>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>

</section>
");
            DefineSection("CalculatorJs", async() => {
                WriteLiteral("\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47837818", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d6e3e4b498c742931f6e5beab73cf6903b5b47838918", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
